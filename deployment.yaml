apiVersion: apps/v1
kind: Deployment
metadata:
    name: fms-frontend-deployment
spec:
    replicas: 1 # Adjust as needed
    selector:
        matchLabels:
            app: fms-frontend
    template:
        metadata:
            labels:
                app: fms-frontend
        spec:
            containers:
                - name: fms-frontend
                  image: sechmachine/fms-frontend:latest # Will be updated by CI/CD
                  ports:
                      - containerPort: 80
                  resources: # Customize resource requests/limits as needed
                      limits:
                          cpu: "500m"
                          memory: "512Mi"
                      requests:
                          cpu: "100m"
                          memory: "256Mi"
                - name: tailscale
                  image: tailscale/tailscale:stable
                  resources:
                        limits:
                            cpu: "100m"
                            memory: "128Mi"
                        requests:
                            cpu: "50m"
                            memory: "64Mi"
                  securityContext:
                      capabilities:
                          add:
                              - NET_ADMIN
                              - NET_RAW # add net raw too!
                      runAsUser: 1000 # Assign a non-root user (optional but recommended for security)
                      allowPrivilegeEscalation: true # Allow the container to escalate privileges
                  args: ["up", "--authkey=${{ secrets.TAILSCALE_AUTH_KEY }}", "--hostname=frontend-pod-$(POD_NAME)"] # Use GitHub Secret for Auth Key
                  env:
                      - name: POD_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.name
                  volumeMounts: # For persistent storage
                      - name: tailscale-data
                        mountPath: /var/lib/tailscale
            volumes:  # Persistent Volume Claim
                - name: tailscale-data
                  persistentVolumeClaim:
                      claimName: tailscale-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim # For Tailscale config persistence
metadata:
    name: tailscale-pvc
spec:
    accessModes:
        - ReadWriteOnce
    resources:
        requests:
            storage: 128Mi
    storageClassName: standard-rwo # Use your preferred storage class

---
apiVersion: v1
kind: Service
metadata:
    name: fms-frontend-service
spec:
    selector:
        app: fms-frontend
    ports:
        - protocol: TCP
          port: 80
          targetPort: 80
    type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: frontend-ingress
    annotations:
        kubernetes.io/ingress.class: "nginx"  # If using Nginx Ingress
        nginx.ingress.kubernetes.io/use-regex: "true"  # For Google-Managed Certs
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
    tls:
        - hosts:
              - fms-fa.org # Your domain
          secretName: gke-managed-ssl-certificate  # For Google-managed certificates

    rules:
        - host: fms-fa.org # Your domain
          http:
              paths:
                  - path: /
                    pathType: Prefix
                    backend:
                        service:
                            name: frontend-service
                            port:
                                number: 80
